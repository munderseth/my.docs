"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[824],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return c}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=p(n),c=l,k=m["".concat(s,".").concat(c)]||m[c]||u[c]||r;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function c(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},212:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return c},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return u}});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),i=["components"],o={sidebar_position:1},s="Ruby",p={unversionedId:"languages/ruby",id:"languages/ruby",title:"Ruby",description:"- https://www.ruby-lang.org/en/",source:"@site/docs/languages/ruby.md",sourceDirName:"languages",slug:"/languages/ruby",permalink:"/my.docs/languages/ruby",draft:!1,editUrl:"https://github.com/munderseth/my.docs/edit/main/docs/languages/ruby.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Languages & Frameworks",permalink:"/my.docs/category/languages--frameworks"},next:{title:"Rails",permalink:"/my.docs/languages/rails"}},d={},u=[{value:"Language",id:"language",level:2},{value:"Variables",id:"variables",level:3},{value:"Strings",id:"strings",level:3},{value:"Symbols",id:"symbols",level:3},{value:"Arrays &amp; Hashes",id:"arrays--hashes",level:3},{value:"Control Structures",id:"control-structures",level:3},{value:"Iterators",id:"iterators",level:3},{value:"Block",id:"block",level:3},{value:"Method",id:"method",level:3},{value:"Keyword arguments",id:"keyword-arguments",level:4},{value:"Splat",id:"splat",level:4},{value:"Block",id:"block-1",level:4},{value:"Classes",id:"classes",level:3},{value:"class &amp; instance methods",id:"class--instance-methods",level:4},{value:"super",id:"super",level:4},{value:"private",id:"private",level:4},{value:"Accessors",id:"accessors",level:4},{value:"Initialization",id:"initialization",level:4},{value:"Singleton methods",id:"singleton-methods",level:4},{value:"Modules",id:"modules",level:3},{value:"Include and Extend",id:"include-and-extend",level:4},{value:"Superclass",id:"superclass",level:4},{value:"Procedure objects",id:"procedure-objects",level:3},{value:"Exceptions",id:"exceptions",level:3},{value:"rescue",id:"rescue",level:4},{value:"ensure",id:"ensure",level:4},{value:"Notes",id:"notes",level:3},{value:"Installation",id:"installation",level:2},{value:"Visual Studio Extensions",id:"visual-studio-extensions",level:3},{value:"Brew Installation (required for WSL)",id:"brew-installation-required-for-wsl",level:3},{value:"References",id:"references",level:2}],m={toc:u};function c(e){var t=e.components,n=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"ruby"},"Ruby"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.ruby-lang.org/en/"},"https://www.ruby-lang.org/en/"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.ruby-lang.org/en/documentation/"},"https://www.ruby-lang.org/en/documentation/"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://ruby-doc.org/"},"https://ruby-doc.org/")," - Official API Documentation (based on versions)")))))),(0,r.kt)("h2",{id:"language"},"Language"),(0,r.kt)("p",null,"Everything is basically an object."),(0,r.kt)("p",null,"This Object often is referred to as the top-level scope in Ruby."),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The top-level scope is an empty, ",(0,r.kt)("strong",{parentName:"p"},"anonymous object"),". All Ruby code starts in here."))),(0,r.kt)("p",null,"For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'puts "hello"\n')),(0,r.kt)("p",null,"Is the same as:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'self.puts "hello"\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"self")," always refer to the current executing object."),(0,r.kt)("h3",{id:"variables"},"Variables"),(0,r.kt)("p",null,"Variables have not type."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"category"),(0,r.kt)("th",{parentName:"tr",align:null},"type"),(0,r.kt)("th",{parentName:"tr",align:null},"example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"$"),(0,r.kt)("td",{parentName:"tr",align:null},"global"),(0,r.kt)("td",{parentName:"tr",align:null},"$my_thing")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"@@"),(0,r.kt)("td",{parentName:"tr",align:null},"class"),(0,r.kt)("td",{parentName:"tr",align:null},"@@count")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"@"),(0,r.kt)("td",{parentName:"tr",align:null},"instance"),(0,r.kt)("td",{parentName:"tr",align:null},"@space")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[a-z]"," or _"),(0,r.kt)("td",{parentName:"tr",align:null},"local"),(0,r.kt)("td",{parentName:"tr",align:null},"_my_other_thing")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[A-Z]"),(0,r.kt)("td",{parentName:"tr",align:null},"constant"),(0,r.kt)("td",{parentName:"tr",align:null},"Max")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"self"),' - refers to currenlty executing object (i.e. self.puts "hello")'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"nil")," - assigned to uninitialized variables")),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Ruby only considers ",(0,r.kt)("inlineCode",{parentName:"p"},"nil")," to be equivalent to ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."))),(0,r.kt)("p",null,"Because ",(0,r.kt)("em",{parentName:"p"},"\u201cis equivalent to true\u201d")," or ",(0,r.kt)("em",{parentName:"p"},"\u201cis equivalent to false\u201d")," is quite a clunky thing to repeat so often the programming community has come up with terms for this: ",(0,r.kt)("inlineCode",{parentName:"p"},"truthiness")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"falsiness"),"."),(0,r.kt)("p",null,'So we can say that the string "my_string" is truthy. And ',(0,r.kt)("inlineCode",{parentName:"p"},"nil")," is the only other thing that is ",(0,r.kt)("strong",{parentName:"p"},"falsy")," in Ruby, except ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," itself."),(0,r.kt)("p",null,"Empty strings ",(0,r.kt)("inlineCode",{parentName:"p"},'""'),", arrays ",(0,r.kt)("inlineCode",{parentName:"p"},"[]"),", and hashes ",(0,r.kt)("inlineCode",{parentName:"p"},"{}")," are all ",(0,r.kt)("strong",{parentName:"p"},"truthy"),"."),(0,r.kt)("h3",{id:"strings"},"Strings"),(0,r.kt)("p",null,"Reference - ",(0,r.kt)("a",{parentName:"p",href:"https://ruby-doc.org/3.1.4/String.html"},"https://ruby-doc.org/3.1.4/String.html")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Uses both ",(0,r.kt)("inlineCode",{parentName:"li"},'""')," and ",(0,r.kt)("inlineCode",{parentName:"li"},"''")),(0,r.kt)("li",{parentName:"ul"},"Double quotes allow escaping and expressions using ",(0,r.kt)("inlineCode",{parentName:"li"},"#{}")),(0,r.kt)("li",{parentName:"ul"},"Can do lots of stuff:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},'"this"+"that"\n"text".length\n"text".upcase!\nmy_str = "this"\nmy_str[0,4] - starting at 1st char extract out\nmy_str[0..3] - extract characters from 0 through 3\n')))),(0,r.kt)("h3",{id:"symbols"},"Symbols"),(0,r.kt)("p",null,"Symbols are unique identifiers that are considered ",(0,r.kt)("strong",{parentName:"p"},"code"),", not data. A symbol is written like this: ",(0,r.kt)("inlineCode",{parentName:"p"},":something")),(0,r.kt)("h3",{id:"arrays--hashes"},"Arrays & Hashes"),(0,r.kt)("p",null,"Array - ",(0,r.kt)("a",{parentName:"p",href:"https://ruby-doc.org/3.1.4/Array.html"},"https://ruby-doc.org/3.1.4/Array.html")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'ary = [1, 2, 3]\nary + ["foo", "boo"]\nary[0]\nary[0,2]\n')),(0,r.kt)("p",null,"Array stuff:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'str = ary.join\nstr2 = ary.join(":")\nary2 = str2.split(":")\n')),(0,r.kt)("p",null,"Hash - ",(0,r.kt)("a",{parentName:"p",href:"https://ruby-doc.org/3.1.4/Hash.html"},"https://ruby-doc.org/3.1.4/Hash.html")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"h = {foo: 0, boo: 1}\nh = {'foo': 0, 'boo':1, other: 2, :and => 3, \"and\" => 4, 5 => 5}\nh[foo:] = 0\nh[5] = 5\nh[\"and\"] = 4\nh[:and] = 3\n")),(0,r.kt)("h3",{id:"control-structures"},"Control Structures"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"case"),(0,r.kt)("li",{parentName:"ul"},"while"),(0,r.kt)("li",{parentName:"ul"},"for",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},'for elt in [100,-9.6,"pickle"]\n  print "#{elt}\\t(#{elt.class})\\n"\nend\n')))),(0,r.kt)("h3",{id:"iterators"},"Iterators"),(0,r.kt)("p",null,"Used to iterator over a collection."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Methods off containers such as Arrays and Hashes that accept ",(0,r.kt)("inlineCode",{parentName:"p"},"blocks")," are called ",(0,r.kt)("strong",{parentName:"p"},"Iterators")," (aka ",(0,r.kt)("em",{parentName:"p"},"iterator methods"),")"))),(0,r.kt)("h3",{id:"block"},"Block"),(0,r.kt)("p",null,"An anonymous chuck of code passed to a method. When using an ",(0,r.kt)("em",{parentName:"p"},"iterator")," receives parameters using ",(0,r.kt)("inlineCode",{parentName:"p"},"|p|"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'[1, 2, 3, 4, 5].each { |number| puts "#{number} was passed to the block" }\n')),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"A block is a piece of code that can accepts arguments, and can return a value. A block is always passed to a method call."))),(0,r.kt)("p",null,"Single line syntax ",(0,r.kt)("inlineCode",{parentName:"p"},"{}"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'5.times { puts "hello"}\n')),(0,r.kt)("p",null,"Multiple line syntax ",(0,r.kt)("inlineCode",{parentName:"p"},"do ... end")," (recommended):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'5.times do\n  puts "hi"\n  puts "goodbye"\nend\n')),(0,r.kt)("h3",{id:"method"},"Method"),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"default parameters make passing optional"))),(0,r.kt)("h4",{id:"keyword-arguments"},"Keyword arguments"),(0,r.kt)("p",null,"Allows the caller to use a different order."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'def write(file:, data: "default")\n ..\nend\n')),(0,r.kt)("h4",{id:"splat"},"Splat"),(0,r.kt)("p",null,"Captures remaining arguments into an ",(0,r.kt)("strong",{parentName:"p"},"array")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"def add(first_num, *others)\n  sum = first_num\n  others.each { |n| sum + n}\n  sum\nend\n")),(0,r.kt)("p",null,"Captures remaining arguments into a ",(0,r.kt)("strong",{parentName:"p"},"hash"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'def config(m: nil, **options)\n  options[:it] ||= "nope"\nend\nputs config( foo:0, it: "YES" )\n')),(0,r.kt)("h4",{id:"block-1"},"Block"),(0,r.kt)("p",null,"Uses ",(0,r.kt)("inlineCode",{parentName:"p"},"&")," to specify. To test for the optional block use ",(0,r.kt)("inlineCode",{parentName:"p"},"block_given?")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'def greet(name, &my_block)\n    # Check if a block was provided\n    if block_given?\n      # Execute the block and pass the name as an argument\n      my_block.call(name)\n    else\n      puts "Hello, #{name}!"\n    end\n  end\n\n  # Call the method with just a name\n  greet("John")\n  # Call the method with a name and a block\n  greet("Mary") do |name|\n    puts "It\'s a pleasure to meet you, #{name}!"\nend\n')),(0,r.kt)("h3",{id:"classes"},"Classes"),(0,r.kt)("p",null,"There exist a superclass of every other class - ",(0,r.kt)("inlineCode",{parentName:"p"},"Object"),"."),(0,r.kt)("p",null,"Any top-level method can be called directly similar to a function call or can use ",(0,r.kt)("inlineCode",{parentName:"p"},"self.foo()")),(0,r.kt)("p",null,"Does ",(0,r.kt)("strong",{parentName:"p"},"not")," allow ",(0,r.kt)("em",{parentName:"p"},"multiple inheritance"),", which is inheriting from multiple superclasses. Uses the inclusion of ",(0,r.kt)("em",{parentName:"p"},"modules"),", thus providing a way to ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Mixin"},"mixin")," the modules methods."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"polymorphism")," - an entity in code such as a variable and method can have more than one form. For example, accessing different objects of different types using the same interface. Each type can provide its own independent implementation of this interface."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"self")," -"),(0,r.kt)("li",{parentName:"ul"},"Use ",(0,r.kt)("inlineCode",{parentName:"li"},"private")," within class and following methods will not be publically available")),(0,r.kt)("p",null,"Constants can be defined in a ",(0,r.kt)("a",{parentName:"p",href:"https://ruby-doc.org/docs/ruby-doc-bundle/UsersGuide/rg/constants.html"},"Class and Module"),"."),(0,r.kt)("h4",{id:"class--instance-methods"},"class & instance methods"),(0,r.kt)("p",null,"Requires using ",(0,r.kt)("inlineCode",{parentName:"p"},"self.")," to define a class method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'class Hello\n  def self.from_the_class\n    "Hello, from a class method"\n  end\n\n  def from_an_instance\n    "Hello, from an instance method"\n  end\nend\n')),(0,r.kt)("p",null,"To use:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Hello.from_the_class\nHello.new.from_an_instance\n")),(0,r.kt)("p",null,"Can also use ",(0,r.kt)("inlineCode",{parentName:"p"},"extend self")," to create class methods with the module:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"module MyModule\n  extend self\n  def foo\n  end\nend\n")),(0,r.kt)("h4",{id:"super"},"super"),(0,r.kt)("p",null,"A subclass can ",(0,r.kt)("em",{parentName:"p"},"enhance")," the superclass's method, versus replacing it, by using ",(0,r.kt)("inlineCode",{parentName:"p"},"super"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},' class Student2 < Human\n    def identify\n      super\n      print "I\'m a student too.\\n"\n    end\n  end\n')),(0,r.kt)("p",null,"The superclass ",(0,r.kt)("inlineCode",{parentName:"p"},"Human")," also contains the method ",(0,r.kt)("inlineCode",{parentName:"p"},"identify")),(0,r.kt)("h4",{id:"private"},"private"),(0,r.kt)("p",null,"Following methods not publically available."),(0,r.kt)("h4",{id:"accessors"},"Accessors"),(0,r.kt)("p",null,"Since many instance variables need accessor methods, Ruby provides convenient shortcuts for the standard forms."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Shortcut"),(0,r.kt)("th",{parentName:"tr",align:null},"Effect"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attr_reader :v"),(0,r.kt)("td",{parentName:"tr",align:null},"def v; @v; end")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attr_writer :v"),(0,r.kt)("td",{parentName:"tr",align:null},"def v=(value); @v=value; end")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attr_accessor :v"),(0,r.kt)("td",{parentName:"tr",align:null},"attr_reader :v; attr_writer :v")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attr_accessor :v, :w"),(0,r.kt)("td",{parentName:"tr",align:null},"attr_accessor :v; attr_accessor :w")))),(0,r.kt)("h4",{id:"initialization"},"Initialization"),(0,r.kt)("p",null,"Whenever Ruby creates a new object, it looks for a method named ",(0,r.kt)("inlineCode",{parentName:"p"},"initialize")," and executes it."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'class Fruit\n  def initialize\n    @kind = "apple"\n    @condition = "ripe"\n  end\nend\n')),(0,r.kt)("h4",{id:"singleton-methods"},"Singleton methods"),(0,r.kt)("p",null,"Requires instantiating the object first and then redefining the method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"obj = TheObj.new\ndef obj.method\n ..\nend\n")),(0,r.kt)("h3",{id:"modules"},"Modules"),(0,r.kt)("p",null,"Are not instantiated. Used for sharing methods by including within a class."),(0,r.kt)("h4",{id:"include-and-extend"},"Include and Extend"),(0,r.kt)("p",null,"TBD"),(0,r.kt)("h4",{id:"superclass"},"Superclass"),(0,r.kt)("p",null,"When a superclass is defined within a module, you need to use ",(0,r.kt)("inlineCode",{parentName:"p"},"::")," to specify its full path."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"module Animals\n  class Mammal\n    # ...\n  end\nend\n\nclass Dog < Animals::Mammal\n  # ...\nend\n\n")),(0,r.kt)("h3",{id:"procedure-objects"},"Procedure objects"),(0,r.kt)("p",null,"A Proc object is an encapsulation of a block of code, which can be stored in a local variable, passed to a method or another Proc , and can be called."),(0,r.kt)("p",null,"Proc - ",(0,r.kt)("a",{parentName:"p",href:"https://ruby-doc.org/3.1.4/Proc.html"},"https://ruby-doc.org/3.1.4/Proc.html")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'myproc = proc { p "help me"}\nmyproc.call\n')),(0,r.kt)("h3",{id:"exceptions"},"Exceptions"),(0,r.kt)("h4",{id:"rescue"},"rescue"),(0,r.kt)("p",null,"A block executes until an exception is hit, transfers control the a bloc of error handling code marked with ",(0,r.kt)("inlineCode",{parentName:"p"},"rescue")),(0,r.kt)("h4",{id:"ensure"},"ensure"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ensure")," code block executes regardless of the success or failure of the ",(0,r.kt)("inlineCode",{parentName:"p"},"begin")," block."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'begin\n  file = open("/tmp/some_file", "w")\n  # ... write to the file ...\nrescue\n  # ... handle the exceptions ...\nensure\n  file.close   # ... and this always happens.\nend\n')),(0,r.kt)("h3",{id:"notes"},"Notes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"multiple statements on one line must be separated by ",(0,r.kt)("inlineCode",{parentName:"li"},";")),(0,r.kt)("li",{parentName:"ul"},"comments ",(0,r.kt)("inlineCode",{parentName:"li"},"#")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"=begin")," .. ",(0,r.kt)("inlineCode",{parentName:"li"},"=end"))),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Install ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/rbenv/rbenv"},"rbenv")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"brew install rbenv ruby-build\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"rbenv -v\n")),(0,r.kt)("p",null,"Using ",(0,r.kt)("em",{parentName:"p"},"ruby-build 20231014")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"ruby-build --version\n")),(0,r.kt)("p",null,"Update shell using ",(0,r.kt)("inlineCode",{parentName:"p"},"rbenv init"),". For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"rbenv init\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'# Load rbenv automatically by appending\n# the following to ~/.bashrc:\neval "$(rbenv init - bash)"\n')),(0,r.kt)("p",null,"Execute the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"echo 'eval \"$(rbenv init - bash)\"' >> ~/.bashrc\n")),(0,r.kt)("p",null,"Review the list of versions available"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"rbenv install --list\n")),(0,r.kt)("p",null,"Install a specific version"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"rbenv install 3.1.4\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"rbenv global 3.1.4\n")),(0,r.kt)("p",null,"Add to Shell"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"rbenv init\n")),(0,r.kt)("h3",{id:"visual-studio-extensions"},"Visual Studio Extensions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner"},"Code Runner"))),(0,r.kt)("h3",{id:"brew-installation-required-for-wsl"},"Brew Installation (required for WSL)"),(0,r.kt)("p",null,"A Package Manager."),(0,r.kt)("p",null,"Used to ",(0,r.kt)("em",{parentName:"p"},"re-synchronize")," the latest package index files:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo apt update\n")),(0,r.kt)("p",null,"Install ",(0,r.kt)("a",{parentName:"p",href:"https://brew.sh/"},"Homebrew")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"\n')),(0,r.kt)("p",null,"Codespaces/WSL Shell:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"echo 'eval \"$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)\"' >> ~/.bashrc\n")),(0,r.kt)("p",null,"Using a ",(0,r.kt)("strong",{parentName:"p"},"new")," terminal:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"brew -v\n")),(0,r.kt)("p",null,"Dependency Packages"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo apt-get install build-essential\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"brew install gcc\n")),(0,r.kt)("h2",{id:"references"},"References"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://ruby-doc.org/docs/ruby-doc-bundle/UsersGuide/rg/index.html"},"Ruby user's guide")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://ruby-for-beginners.rubymonstas.org/index.html"},"Ruby For Beginners")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.freecodecamp.org/news/learning-ruby-from-zero-to-hero-90ad4eecc82d/"},"Learning Ruby from Zero to Hero")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.geeksforgeeks.org/ruby-programming-language/?ref=lbp"},"https://www.geeksforgeeks.org/ruby-programming-language/?ref=lbp")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/28009772/ruby-modules-included-do-end-block"},"https://stackoverflow.com/questions/28009772/ruby-modules-included-do-end-block"))))}c.isMDXComponent=!0}}]);